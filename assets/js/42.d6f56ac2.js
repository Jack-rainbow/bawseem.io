(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{326:function(n,v,_){"use strict";_.r(v);var e=_(1),p=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,v=n.$createElement,_=n._self._c||v;return _("div",{staticClass:"content"},[_("h2",{attrs:{id:"url输入到页面展现到底发生什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#url输入到页面展现到底发生什么","aria-hidden":"true"}},[n._v("#")]),n._v(" URL输入到页面展现到底发生什么")]),n._v(" "),_("p",[n._v("过程：")]),n._v(" "),_("ul",[_("li",[_("p",[n._v("1.DNS解析：将域名解析成IP地址")]),n._v(" "),_("p",[_("code",[n._v("域名解析：")])]),n._v(" "),_("p",[n._v("DNS 协议通过域名查找Ip地址或者逆向从IP地址反查域名的服务.Dns是网络服务器,解析的时候就是在dns记录一条url信息")]),n._v(" "),_("p",[_("code",[n._v("浏览器如何通过域名去查询url对应ip：")])]),n._v(" "),_("p",[n._v("DNS域名解析分为递归查询和迭代查询两种方式，现一般为迭代查询。")]),n._v(" "),_("p",[_("code",[n._v("DNS优化与应用")])]),n._v(" "),_("p",[n._v("1.DNS 缓存")]),n._v(" "),_("pre",[_("code",[n._v("  1.浏览器缓存\n\n  2.系统缓存\n\n  3.路由器缓存\n\n  4.IPS服务器缓存\n\n  5.根域名服务缓存\n\n  6.顶级域名缓存\n\n  7.主域名服务器缓存\n")])]),n._v(" "),_("p",[n._v("2.DNS负载均衡")]),n._v(" "),_("p",[n._v("DNS服务器为同一个主机名配置多个IP地址，在应答DNS查询时，DNS服务器对每个查询以DNS文件中主机记录的IP地址按顺序返回不同的解析结果。将客户端访问引导到不同的机器上去，使得不同的客户端访问不同的服务器，从而达到负载均衡。")]),n._v(" "),_("p",[n._v("3.CDN")]),n._v(" "),_("p",[n._v("CDN利用了DNS 重定向的技术。DNS服务器返回一个接近用户的IP地址给用户。CDN节点的服务器负责响应用户的请求，提供所需的内容。")]),n._v(" "),_("p",[n._v("4.dns-prefetch")]),n._v(" "),_("p",[n._v("DNS预解析。当浏览网页的时候，浏览器会在加载网页时会域名进行解析缓存，同时在当前网页里边操作的时候就需要再去DNS解析域名了，减少用户等待时间")])]),n._v(" "),_("li",[_("p",[n._v("2.TCP连接：TCP三次握手")]),n._v(" "),_("p",[n._v("1.OSI模型")]),n._v(" "),_("pre",[_("code",[n._v("  1.传输层\n  \n  2.数据链路层\n\n  3.网络层\n\n  4.传输层\n\n  5.会话层\n\n  6.表示层\n\n  7.应用层\n")])]),n._v(" "),_("p",[n._v("2.TCP/IP模型")]),n._v(" "),_("pre",[_("code",[n._v("  1.应用层\n\n  TELNET/SSH/HTTP/SMTP/POP/SSL/TLS/FTP/MIME/HTML/SNMP/MIB/SIP/RTP\n\n  2.传输层\n\n  TCP/UDP/UDP-lite/SCTP/DCCP\n\n  3.网络层\n\n  ARP/IPV4/IPV6/ICMP/IPsec\n\n  4.网络层\n\n  以太网/无线LAN/PPP\n")])]),n._v(" "),_("p",[n._v("3.TCP三次握手")])]),n._v(" "),_("li",[_("p",[n._v("3.发生HTTP请求")])]),n._v(" "),_("li",[_("p",[n._v("4.服务器处理请求并处理HTTP报文")]),n._v(" "),_("p",[n._v("1.常用的web Server")]),n._v(" "),_("p",[n._v("IIS/apache/Nginx/lighttpd")]),n._v(" "),_("p",[n._v("2.mvC模型")]),n._v(" "),_("p",[n._v("用户输入、将用户的数据传递给模型、模型进行数据库存取、然后选择视图、然后将HTML返回给浏览器")])]),n._v(" "),_("li",[_("p",[n._v("5.浏览器解析页面")]),n._v(" "),_("p",[n._v("1.浏览器主要构成")]),n._v(" "),_("pre",[_("code",[n._v("  1.用户界面(user interface)\n\n      包括地址栏、后退/前进按钮、书签目录等(浏览器界面)\n\n  2.浏览器引擎(Browser engine)\n\n      用于查询及操作渲染引擎的接口\n\n  3.渲染引擎\n\n      用于显示请求的内容，例如如果内容为HTML，测试解析XMHTML,CSS\n\n      AST树：\n\n\n\n  4.网络\n\n      用来完成网络调用。例如处理http请求。\n\n  5.JS解释器\n\n      用来解析JS代码\n\n  6.UI后端\n\n      具有不特定某个平台的通用接口，底层使用操作系统的接口\n\n  7.数据存储\n\n  浏览器提供的indexDB\n")])]),n._v(" "),_("p",[n._v("2.浏览器内核渲染页面步骤（ast树）")]),n._v(" "),_("pre",[_("code",[n._v("  1.解析HTML，构建DOM树\n\n  2.解析css，生成css规则\n\n  3.合并DOM树和css规则，生成render树\n\n  4.布局render树，负责各元素的尺寸，位置的计算\n\n  5.绘制render树(parint-像素)，绘制页面像素信息\n")])])]),n._v(" "),_("li",[_("p",[n._v("6.断开连接：TCP四次挥手")]),n._v(" "),_("p",[n._v("1.浏览器 向 服务器发送报文，服务器接收报文，此时浏览器报文发送完成（浏览器向服务器请求报文）")]),n._v(" "),_("p",[n._v("2.服务器向浏览器发送报文，表示请求报文接收完成。（服务器向浏览器接收报文）")]),n._v(" "),_("p",[n._v("3.服务器告诉浏览器，响应报文发送OK（服务器向浏览器发送响应报文）")]),n._v(" "),_("p",[n._v("4.浏览器告诉服务器，响应报文接收完成，准备关闭TCP连接吧（浏览器向服务器接收报文）")])])])])}],!1,null,null,null);v.default=p.exports}}]);