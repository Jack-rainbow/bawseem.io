(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{320:function(n,e,t){"use strict";t.r(e);var o=t(1),r=Object(o.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content"},[t("p",[n._v("1.请描述一下sessionStorage 和 localStorage 的区别？\n1.数据区别\n当数据保存在localstorage里边时页面关闭时数据依然存在的，而sessionStorage关闭页面时数据直接就消失了。\n2.数据共享\nlocalstrorage在同源窗口数据中是共享的，但是sessionStorage是不共享的\n2.写出几种CSS清除浮动的方法（至少两种）？\n1.clearBoth\n2.浮动的父元素设置高度\n3.写几种常见的浏览器兼容问题以及处理方法？\n1.flex\ndisplay:flex;\ndisplay:-webkit-box;\ndisplay:-ms-flexbox;\ndisplay:-webkit-flex;\n2.每个浏览器标签展示的margin 和padding大小都不一样\n*{\nmargin:0;\npadding:0;\n}\n3.addEventListener兼容不一样\nchrome用addEventerListener  IE用attchEvent")]),t("p",[n._v("4.写出几种开发中常遇到的http状态码及其含义？\n1.400    前端发送至后台数据格式错误\n2.404    页面丢失\n3.401    验证过期\n4.500    后端报错\n5.403    没有权限\n5.写一个数组去重函数，要求把拥有相同id的元素去除掉只保留一个，例如：源数据为arr = [{ id:1 }, { id:1 },{ id:2 }],处理后数据为newArr = [{ id:1 }, {id: 2}]。\n1.for(let i = 0; i < arr.length; i++){\nfor(let j = i+1 ; j < arr.length;j++){\nif(arr[j].id == arr[i].id){\narr.splice(j,1);\nj--;\n}\n}\n}")]),t("p",[n._v("6.利用ajax或axios（其他也行）请求后台接口，把obj={ account : ‘you’,psw: ‘123456’},传递到‘/user’这个接口，并写出接口响应成功后的回调（打印一下返回的数值即可）。")]),t("p",[n._v("let  global = 'http:www.baidu.com';\nlet obj = { account : ‘you’,psw: ‘123456’};\naxios.post(Global + '/user',obj).then(res=>{\nconsole.log(res);"),t("br"),n._v("\n}")]),t("p",[n._v("7.如何把一个公共函数common（）挂载到vue原型链上，实现在vue组件内可以通过this.common()来调用该公共函数？\nvue.prototype.common = common;")]),t("p",[n._v("8.写出几个你觉得有效的网站优化方案（加快用户访问速度，提升用户体验）？\n1.图片压缩\n2.cdn缓存\n3.减少代码冗余性\n4.图片懒加载\n5.减少不必要的接口请求")]),t("p",[n._v("9.如何解决接口访问中遇到的跨域问题？\n1. 首先看network里边后端是否添加有allow字段，如没有,让后台添加\n2. 前端添加headers")]),t("p",[n._v("10.一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？（流程说的越详细越好）\n先DNS解析url-ip,然后去请求页面资源,生成DOM树,然后去解析css,最后解析js,这个地方知识薄弱,无法具体解析\n11.简要写一下vue父子组件间的传值。\n父组件 bind一个值，子组件通过props获取，如果子组件想要修改父组件传过来的值不可以直接，需二次接收")]),t("p",[n._v("12.写出几种你常用的es6新特性并简要说明一下？\n1.let  块级作用域 const  常量 用于声明一些固定的值\n2.promise 用于解决异步回调,最好用的就是async await\n3.Array.from  Array.of 转换成数组\n4.箭头函数  减少了函数中声明this，一直作用于window\n5.扩展运算符   ...可以用于函数中参数和数组合并\n6.反字符串    减少了+的拼接\n7.class    减少了es5中的大量 prototype,Object.create,constructor\n8.export import可以将js划分单独模块\n13.到目前为止，你在项目开发过程中，你觉得最难的点在哪里，简要说明一下（难点+你的解决方案）\n遇到最难的就是混合开发的时候,碰到了异步回调执行顺序的问题,最后利用了promise 和event loop的知识 使用了 setTimeOut(()=>{},0)")])])}],!1,null,null,null);e.default=r.exports}}]);