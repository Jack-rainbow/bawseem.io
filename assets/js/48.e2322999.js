(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{329:function(t,n,e){"use strict";e.r(n);var s=e(1),i=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"content"},[n("h4",{attrs:{id:"类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类型","aria-hidden":"true"}},[this._v("#")]),this._v(" 类型")]),this._v(" "),n("pre",[n("code",[this._v(">基础引用类型    string、null、undefined、boolean、number\n>引用类型  object、array、function \n\n区别：\n    基础引用类型是存在栈中的,而引用类型是存在堆中的，基础引用类型每当一次更改都会在栈内存中\n    开辟一个新的地址,所以修改的时候影响的不是他本身，但是引用类型是保存在堆中的\n    每次引用都是引用的都一个对象,所以当一个对象修改的时候，其他对象也全部修改\n\n检测类型： \n    基础引用类型用 \n        typeof 检测，\n    引用类型用 \n        object.prototype.toString.apply()")])])])}],!1,null,null,null);n.default=i.exports}}]);